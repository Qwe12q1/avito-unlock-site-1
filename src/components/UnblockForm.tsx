import React from 'react';
import { z } from 'zod';
import { useForm } from 'react-hook-form';
import { zodResolver } from '@hookform/resolvers/zod';
import {
  Form,
  FormControl,
  FormDescription,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from '@/components/ui/form';
import { Input } from '@/components/ui/input';
import { Button } from '@/components/ui/button';
import { Textarea } from '@/components/ui/textarea';
import { toast } from '@/components/ui/use-toast';
import ScrollFadeSection from './ScrollFadeSection';

const formSchema = z.object({
  email: z.string().email({ message: '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email' }),
  name: z.string().min(2, { message: '–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞' }),
  blockReason: z.string().min(3, { message: '–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏' }),
  comments: z.string().min(10, { message: '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤' }),
});

type FormValues = z.infer<typeof formSchema>;

const UnblockForm: React.FC = () => {
  const form = useForm<FormValues>({
    resolver: zodResolver(formSchema),
    defaultValues: {
      email: '',
      name: '',
      blockReason: '',
      comments: '',
    },
  });

  function onSubmit(values: FormValues) {
    console.log(values);
    toast({
      title: "–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! ‚úÖ",
      description: "–ú—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –≤–∞—à—É –∑–∞—è–≤–∫—É –∏ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è",
    });
    
    form.reset();
  }

  return (
    <ScrollFadeSection className="w-full max-w-3xl mx-auto">
      <div className="bg-card p-8 rounded-2xl shadow-lg border border-primary/20">
        <h2 className="text-3xl font-bold mb-6 text-center flex items-center justify-center gap-2">
          <span className="emoji-bounce">üìù</span> –§–æ—Ä–º–∞ –∑–∞—è–≤–∫–∏
        </h2>
        
        <Form {...form}>
          <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-6">
            <FormField
              control={form.control}
              name="email"
              render={({ field }) => (
                <FormItem>
                  <FormLabel className="flex items-center gap-2">
                    <span className="emoji-bounce">üìß</span> Email –∞–∫–∫–∞—É–Ω—Ç–∞
                  </FormLabel>
                  <FormControl>
                    <Input 
                      placeholder="your@email.com" 
                      {...field} 
                      className="hover-scale transition-all"
                    />
                  </FormControl>
                  <FormDescription>
                    –£–∫–∞–∂–∏—Ç–µ email –æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
                  </FormDescription>
                  <FormMessage />
                </FormItem>
              )}
            />
            
            <FormField
              control={form.control}
              name="name"
              render={({ field }) => (
                <FormItem>
                  <FormLabel className="flex items-center gap-2">
                    <span className="emoji-bounce">üë§</span> –ò–º—è –≤ –ø—Ä–æ—Ñ–∏–ª–µ
                  </FormLabel>
                  <FormControl>
                    <Input 
                      placeholder="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤" 
                      {...field} 
                      className="hover-scale transition-all"
                    />
                  </FormControl>
                  <FormDescription>
                    –ò–º—è, —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤ –≤–∞—à–µ–º –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –∞–∫–∫–∞—É–Ω—Ç–µ
                  </FormDescription>
                  <FormMessage />
                </FormItem>
              )}
            />
            
            <FormField
              control={form.control}
              name="blockReason"
              render={({ field }) => (
                <FormItem>
                  <FormLabel className="flex items-center gap-2">
                    <span className="emoji-bounce">üîí</span> –ü—Ä–∏—á–∏–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
                  </FormLabel>
                  <FormControl>
                    <Input 
                      placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –Ω–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª —Å–µ—Ä–≤–∏—Å–∞" 
                      {...field} 
                      className="hover-scale transition-all"
                    />
                  </FormControl>
                  <FormDescription>
                    –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É, –ø–æ –∫–æ—Ç–æ—Ä–æ–π –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω
                  </FormDescription>
                  <FormMessage />
                </FormItem>
              )}
            />
            
            <FormField
              control={form.control}
              name="comments"
              render={({ field }) => (
                <FormItem>
                  <FormLabel className="flex items-center gap-2">
                    <span className="emoji-bounce">üí¨</span> –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
                  </FormLabel>
                  <FormControl>
                    <Textarea 
                      placeholder="–û–ø–∏—à–∏—Ç–µ —Å–∏—Ç—É–∞—Ü–∏—é –ø–æ–¥—Ä–æ–±–Ω–µ–µ..." 
                      className="min-h-32 hover-scale transition-all"
                      {...field} 
                    />
                  </FormControl>
                  <FormDescription>
                    –£–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –ø–æ –≤–∞—à–µ–º—É –º–Ω–µ–Ω–∏—é –º–æ–≥–ª–æ –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ
                  </FormDescription>
                  <FormMessage />
                </FormItem>
              )}
            />
            
            <Button 
              type="submit" 
              className="w-full py-6 text-lg shake-animation"
            >
              <span className="mr-2 emoji-bounce">üöÄ</span> –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
            </Button>
          </form>
        </Form>
      </div>
    </ScrollFadeSection>
  );
};

export default UnblockForm;
